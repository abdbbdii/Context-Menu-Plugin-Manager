{
    "function": "import os, json\n\ndef driver(items: list[str] = [], params: str = \"\"):\n    json_data = json.loads(params) if params else {}\n    input_string = json_data.get('input_string', 'default_string')\n    \n    if not items:\n        print(\"No directory selected.\")\n        return\n    \n    parent_dir = items[0]\n    if not os.path.isdir(parent_dir):\n        print(f\"{parent_dir} is not a valid directory.\")\n        return\n\n    for i, char in enumerate(input_string):\n        file_name = str(i) + '_' + char + '.txt'\n        file_path = os.path.join(parent_dir, file_name)\n        try:\n            with open(file_path, 'w') as f:\n                f.write(char)\n            print(f\"Created file: {file_path}\")\n        except Exception as e:\n            print(f\"Error creating file {file_name}: {e}\")\n\nif __name__ == \"__main__\":\n    driver([\"/path/to/your/directory\"], '{\"input_string\": \"HelloWorld\"}')",
    "image_description": "Creates text files named after each character of the input string.",
    "name": "String to Files",
    "plugin": {
        "description": "Writes a string to files, character by character.",
        "supported_types": [
            "DIRECTORY_BACKGROUND",
            "DIRECTORY"
        ],
        "configs": [
            {
                "name": "input_string",
                "type": "str",
                "label": "Input String",
                "description": "The string to be split into individual files.",
                "default": "default_string"
            }
        ]
    },
    "readme": "# String to Files Plugin\n\nThis plugin takes an input string and creates a text file for each character in the string. The files are named with an index and the character.\n\n## Configuration\n\n*   **input_string**: The string to be split into files.\n\n## Usage\n\n1.  Select a directory in the file explorer.\n2.  Run the plugin.\n3.  The plugin will create text files in the selected directory, each containing a single character from the input string.",
    "requirements": []
}